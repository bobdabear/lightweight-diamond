/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Get,
  GetInterface,
} from "../../../../../contracts/services/market/facets/Get";

const _abi = [
  {
    inputs: [],
    name: "getAllMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
    ],
    name: "getOrderbook",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104de806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630a6e04cb14610046578063b0772d0b14610076578063d60d9bd714610094575b600080fd5b610060600480360381019061005b9190610331565b6100c4565b60405161006d9190610380565b60405180910390f35b61007e61016d565b60405161008b9190610459565b60405180910390f35b6100ae60048036038101906100a9919061047b565b6101fe565b6040516100bb9190610459565b60405180910390f35b60008060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b606060006003018054806020026020016040519081016040528092919081815260200182805480156101f457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116101aa575b5050505050905090565b6060600060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156102c257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610278575b50505050509050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102fe826102d3565b9050919050565b61030e816102f3565b811461031957600080fd5b50565b60008135905061032b81610305565b92915050565b60008060408385031215610348576103476102ce565b5b60006103568582860161031c565b92505060206103678582860161031c565b9150509250929050565b61037a816102f3565b82525050565b60006020820190506103956000830184610371565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6103d0816102f3565b82525050565b60006103e283836103c7565b60208301905092915050565b6000602082019050919050565b60006104068261039b565b61041081856103a6565b935061041b836103b7565b8060005b8381101561044c57815161043388826103d6565b975061043e836103ee565b92505060018101905061041f565b5085935050505092915050565b6000602082019050818103600083015261047381846103fb565b905092915050565b600060208284031215610491576104906102ce565b5b600061049f8482850161031c565b9150509291505056fea26469706673582212209720819cb1d5b3abb92589d2a5b74ba6cdea75b6c35d5901a4696159508f0cc864736f6c63430008140033";

type GetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Get__factory extends ContractFactory {
  constructor(...args: GetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Get & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Get__factory {
    return super.connect(runner) as Get__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GetInterface {
    return new Interface(_abi) as GetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Get {
    return new Contract(address, _abi, runner) as unknown as Get;
  }
}
